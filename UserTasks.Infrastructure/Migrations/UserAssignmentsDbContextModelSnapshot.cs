// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserTasks.Infrastructure.Persistance;

#nullable disable

namespace UserTasks.Infrastructure.Migrations
{
    [DbContext(typeof(UserAssignmentsDbContext))]
    partial class UserAssignmentsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UserTasks.Domain.Models.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("94db15e2-0e2f-4e43-ae7b-de5b278499e2"),
                            Name = "Create project on C",
                            Status = 1,
                            UserId = new Guid("c309aadd-60c7-4d74-a212-9fab144421d9")
                        },
                        new
                        {
                            Id = new Guid("dc75fadd-3c3f-4252-94de-37c6ad05b518"),
                            Name = "Create project on Ruby",
                            Status = 1,
                            UserId = new Guid("c309aadd-60c7-4d74-a212-9fab144421d9")
                        },
                        new
                        {
                            Id = new Guid("b871a972-4dbd-4fcf-8379-0a30c3e08b13"),
                            Name = "Create project on C#",
                            Status = 1,
                            UserId = new Guid("9f32927f-e521-4e3e-965a-75f816ad8a10")
                        },
                        new
                        {
                            Id = new Guid("af921e72-5e35-4155-81e3-9030e5810faa"),
                            Name = "Create project on F#",
                            Status = 1,
                            UserId = new Guid("af292b83-3a5a-41ae-bb4c-19b9263872c9")
                        },
                        new
                        {
                            Id = new Guid("b1da5222-fd46-487a-961d-7adbef71d6b1"),
                            Name = "Create project on Js",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("bda04c89-06d8-46ec-9ec7-6bf59cf56e95"),
                            Name = "Create project on Assembler",
                            Status = 2
                        });
                });

            modelBuilder.Entity("UserTasks.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c309aadd-60c7-4d74-a212-9fab144421d9"),
                            Name = "Alice"
                        },
                        new
                        {
                            Id = new Guid("9f32927f-e521-4e3e-965a-75f816ad8a10"),
                            Name = "Bob"
                        },
                        new
                        {
                            Id = new Guid("af292b83-3a5a-41ae-bb4c-19b9263872c9"),
                            Name = "Jon"
                        });
                });

            modelBuilder.Entity("UserTasks.Domain.Models.UserAssigmentHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AssigmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AssigmentId");

                    b.HasIndex("UserId", "AssigmentId")
                        .IsUnique();

                    b.ToTable("UserAssigmentHistories");
                });

            modelBuilder.Entity("UserTasks.Domain.Models.Assignment", b =>
                {
                    b.HasOne("UserTasks.Domain.Models.User", "User")
                        .WithMany("Assignments")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserTasks.Domain.Models.UserAssigmentHistory", b =>
                {
                    b.HasOne("UserTasks.Domain.Models.Assignment", "Assigment")
                        .WithMany("UserAssigmentHistories")
                        .HasForeignKey("AssigmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserTasks.Domain.Models.User", "User")
                        .WithMany("UserAssigmentHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assigment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserTasks.Domain.Models.Assignment", b =>
                {
                    b.Navigation("UserAssigmentHistories");
                });

            modelBuilder.Entity("UserTasks.Domain.Models.User", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("UserAssigmentHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
